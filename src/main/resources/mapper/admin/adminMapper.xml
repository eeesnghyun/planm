<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.planm.admin.dao.AdminDao">
	
	<select id="getCmpInfo" parameterType="String" resultType="com.app.planm.admin.vo.AdminVO">
		SELECT CMP_NAME	
		     , CMP_OWNER
		     , ADDRESS
		     , ADDRESS_DETAIL
		     , ZIPCODE
		     , PRIMENUM
		     , EMAIL
		     , USER_CODE_RULE
		     , POS_CATEGORY
		     , CMP_LOGO
		  FROM PM_COMPANY
		 WHERE CMP_CODE = #{cmpCode}
	</select>
	
	<update id="saveCmp" parameterType="com.app.planm.admin.vo.AdminDTO">
		UPDATE PM_COMPANY
		   SET CMP_NAME   	  = #{cmpName}
		     , CMP_OWNER  	  = #{cmpOwner}
		     , ADDRESS    	  = #{address}
		     , ADDRESS_DETAIL = #{addressDetail}
		     , ZIPCODE    	  = #{zipcode}
		     , PRIMENUM   	  = #{primenum}
		     , EMAIL 	  	  = #{email}
		     , USER_CODE_RULE = #{userCodeRule}
		     , CMP_LOGO 	  = #{cmpLogo}
		 WHERE CMP_CODE = #{cmpCode}
	</update>
	
	<update id="updatePos" parameterType="com.app.planm.admin.vo.AdminDTO">
		UPDATE PM_COMPANY
		   SET POS_CATEGORY = #{posCategory}
		 WHERE CMP_CODE = #{cmpCode}	
	</update>
	
	<select id="getDeptList" parameterType="String" resultType="camelHashMap">
		SELECT PD.DEPT_CODE	
		     , PD.DEPT_NAME
		     , PD.DEPT_MANAGER
		     , (SELECT USER_NAME FROM PM_USER A WHERE CMP_CODE=PD.CMP_CODE AND USER_CODE=PD.DEPT_MANAGER) MANAGER_NAME
		     , DATE_FORMAT(PD.CREATE_DATE, '%Y-%m-%d') CREATE_DATE
		  FROM PM_DEPT PD
		 WHERE PD.CMP_CODE = #{cmpCode}
		 ORDER BY PD.DEPT_NAME
	</select>
	
	<select id="getPartList" parameterType="com.app.planm.admin.vo.AdminDTO" resultType="camelHashMap">
		SELECT PDP.DEPT_CODE			     
		     , PDP.PART_CODE
		     , PDP.PART_NAME
		     , PDP.PART_MANAGER
   		     , (SELECT USER_NAME FROM PM_USER A WHERE CMP_CODE=PDP.CMP_CODE AND USER_CODE=PDP.PART_MANAGER) MANAGER_NAME
		     , DATE_FORMAT(PDP.CREATE_DATE, '%Y-%m-%d') CREATE_DATE
             , PD.DEPT_MANAGER
             , (SELECT USER_NAME FROM PM_USER A WHERE CMP_CODE=PDP.CMP_CODE AND USER_CODE=PD.DEPT_MANAGER) DEPT_MANAGER_NAME
		  FROM PM_DEPT_PART PDP
			   INNER JOIN PM_DEPT PD
                  ON PDP.CMP_CODE  = PD.CMP_CODE
				 AND PDP.DEPT_CODE = PD.DEPT_CODE
		 WHERE PDP.CMP_CODE  = #{cmpCode}
		   AND PDP.DEPT_CODE = #{deptCode}
		 ORDER BY PDP.PART_NAME
	</select>
	
	<select id="getSignUserList" parameterType="com.app.planm.admin.vo.AdminDTO" resultType="camelHashMap">
		<![CDATA[
			SELECT PU.USER_CODE
				 , PU.USER_NAME  
				 , PU.JOB_POS
				 , (SELECT CHILD_NAME FROM CODE_CHILD A WHERE CHILD_CODE=PU.JOB_POS) JOB_POS_NAME     
			     , IF(IFNULL(PD.DEPT_MANAGER,'N') = 'N', false, true) MANAGER	-- 부서장
			     , IF(IFNULL(PGU.USER_CODE,'N') = 'N', false, true) SIGNAUTH -- 결재권한
			 FROM PM_USER PU
				  LEFT OUTER JOIN PM_DEPT PD
			        ON PU.CMP_CODE  = PD.CMP_CODE	   
			       AND PU.USER_CODE = PD.DEPT_MANAGER
				   AND PU.DEPT_CODE = PD.DEPT_CODE
				  LEFT OUTER JOIN PM_SIGN_USER PGU
                    ON PU.CMP_CODE   = PGU.CMP_CODE
				   AND PU.DEPT_CODE  = PGU.DEPT_CODE
                   AND PU.USER_CODE  = PGU.USER_CODE
                   AND PGU.DEPT_CODE = #{deptCode}
			WHERE PU.CMP_CODE = #{cmpCode} 
			  AND PU.JOB_POS <> '9000'	-- 사원제외
			  AND PU.DEPT_CODE = #{deptCode}
			  AND PU.PART_CODE = #{partCode}
			ORDER BY IF(MANAGER = true, 0, 1), PU.JOB_POS ASC
		]]>		 
	</select>
	
	<update id="updateDept" parameterType="com.app.planm.admin.vo.AdminDTO">
		UPDATE PM_DEPT
		   SET DEPT_NAME    = #{deptName}
		     , DEPT_MANAGER = #{deptManager}
		 WHERE CMP_CODE  = #{cmpCode}
		   AND DEPT_CODE = #{deptCode}
	</update>
	
	<update id="updatePart" parameterType="com.app.planm.admin.vo.AdminDTO">
		UPDATE PM_DEPT_PART
		   SET PART_NAME    = #{partName}
		   	 , PART_MANAGER = #{partManager}
		 WHERE CMP_CODE  = #{cmpCode}
		   AND DEPT_CODE = #{deptCode}
		   AND PART_CODE = #{partCode}
	</update>
	
	<insert id="saveSignUser" parameterType="camelHashMap">
		INSERT INTO PM_SIGN_USER (
			  CMP_CODE
			, DOC_TYPE
			, DEPT_CODE
			, USER_CODE
			, CREATE_DATE
		) VALUES (
			  #{cmpCode}
			, #{docType}
			, #{deptCode}
			, #{userCode}
			, NOW()
		)
	</insert>
	
	
</mapper>